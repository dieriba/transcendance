// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  nickname String  @unique
  email    String  @unique
  password String?

  created_at           DateTime @default(now())
  updated_at           DateTime @updatedAt
  hashed_refresh_token String?

  profile Profile? @relation("user_profile")
  two_fa  TwoFa?   @relation("user_two_fa")

  chatrooms     Chatroom[]      @relation("ChatroomUsers")
  messages      Message[]
  ChatroomUsers ChatroomUsers[]
}

model Profile {
  id String @id @default(uuid())

  avatar     String?
  first_name String? @default("Unknown")
  last_name  String? @default("Unknown")
  fullname   String? @default("Unknown")
  user       User    @relation("user_profile", fields: [userId], references: [id], onDelete: Cascade)
  userId     String  @unique
}

model TwoFa {
  id String @id @default(uuid())

  otp_secret   String?
  otp_auth_url String?

  otp_enabled   Boolean @default(false)
  otp_validated Boolean @default(false)

  sender    User   @relation("user_two_fa", fields: [sender_id], references: [id], onDelete: Cascade)
  sender_id String @unique
}

model Chatroom {
  id            String          @id @default(uuid())
  name          String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  users         User[]          @relation("ChatroomUsers")
  messages      Message[]
  ChatroomUsers ChatroomUsers[]
}

model Message {
  id         String   @id @default(uuid())
  content    String
  imageUrl   String?
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  chatroom   Chatroom @relation(fields: [chatroomId], references: [id], onDelete: Cascade)
  chatroomId String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model ChatroomUsers {
  chatroom   Chatroom @relation(fields: [chatroomId], references: [id], onDelete: Cascade)
  chatroomId String
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@id([chatroomId, userId])
}
