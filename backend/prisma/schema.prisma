// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())

  nickname        String  @unique
  email    String  @unique
  password String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  token   Token[]  @relation("user_refresh_tokens")
  two_fa  TwoFa?   @relation("user_two_fa")
  profile Profile? @relation("user_profile")
}

model Profile {
  id String @id @default(uuid())

  first_name      String? @default("Unknown")
  last_name       String? @default("Unknown")
  fullname        String? @default("Unknown")
  profile_picture String?

  user   User   @relation("user_profile", fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}

model Token {
  id String @id @default(uuid())

  refreshToken String
  expiresAt    DateTime
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user   User   @relation("user_refresh_tokens", fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model TwoFa {
  id String @id @default(uuid())

  otp_secret   String?
  otp_auth_url String?

  otp_enabled   Boolean @default(false)
  otp_validated Boolean @default(false)

  user   User   @relation("user_two_fa", fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}

model GroupChat {
  id String @id @default(uuid())

  bannedUsers String[]
  mutedUsers  String[]
}
