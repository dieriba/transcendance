version: "3.1"

services:
  postgres:
    image: postgres:16.0
    container_name: postgres_db
    env_file:
      .env
    ports:
      - "5432:5432"
    volumes:
      - my-db:/var/lib/postgresql/data
    restart: always
    networks:
      - transcendance
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "dieri", "-d", "transcendance", "-h", "localhost", "-p", "5432"]
      interval: 10s
      timeout: 5s
      retries: 3
    init: true

  backend:
    container_name: nest-container
    build:
      context: "./nest"
      dockerfile: backend.dockerfile
    env_file:
      .env
    restart: unless-stopped
    image: nest:v1
    volumes:
        - ./nest/backend:/app:rw
        - /app/node_modules
        - ./shared:/app/shared:rw
    ports:
      - 3000:3000
      - 9000:9000
      - 5555:5555
    networks:
      - transcendance
    depends_on:
      postgres:
        condition: service_healthy
    init: true

  frontend:
    container_name: react-container
    build:
      context: "./react"
      dockerfile: frontend.dockerfile
    restart: unless-stopped
    image: react:v1
    env_file:
      .env
    volumes:
      - ./react/frontend:/app:rw
      - /app/node_modules
      - ./shared:/app/shared:rw
    ports:
      - 5173:5173
    networks:
    - transcendance
    depends_on:
      - backend
    init: true


networks:
  transcendance:
volumes:
  my-db: